<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="turtle">

    <!-- <xacro:property name="yaml_file" value="$(find turtle_brick)/config/turtle.yaml" />
    <xacro:property name="props" value="${xacro.load_yaml(yaml_file)}" /> -->
    
    <!-- platform_height is the same as total height of the turtle -->
    <xacro:property name="platform_height" value="2"/>
    <xacro:property name="wheel_radius" value="0.2"/>
    <!-- constant dimensions -->
    <xacro:property name="base_length" value="0.125"/>
    <xacro:property name="cylinder_radius" value="${base_length/2}"/>
    <xacro:property name="stem_radius" value="${base_length/2}"/>
    <xacro:property name="platform_radius" value="0.5"/>
    <xacro:property name="platform_thickness" value="0.05"/>
    <xacro:property name="wheel_thickness" value="0.1"/>
    <!-- dimensions adaptive to parameters -->
    <xacro:property name="stem_height" value="${wheel_radius}"/>
    <xacro:property name="cylinder_height" value="${platform_height - (wheel_radius + stem_height + base_length + platform_thickness)}"/>

    <!-- the turtle robot base_link -->
    <link name="base_link">
        <visual>
            <origin xyz="0 0 ${base_length/2}" rpy="0 0 0"/>
            <geometry>
                <box size="${base_length} ${base_length} ${base_length}" />
            </geometry>
            <material name="green">
                <color rgba="0.2 1 0.2 1"/>
            </material>
        </visual>
    </link>

    <!-- top half of the turtle 'unicycle' -->
    <joint name="cylinder_joint" type="fixed">
        <origin xyz="0 0 ${base_length}" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="cylinder_link"/>
    </joint>

    <link name="cylinder_link">
        <visual>
            <origin xyz="0 0 ${cylinder_height/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder length="${cylinder_height}" radius="${cylinder_radius}"/>
            </geometry>
            <material name="red">
                <color rgba="1 0.2 0.2 1"/>
            </material>
        </visual>
    </link>

    <joint name="platform_joint" type="revolute">
        <origin xyz="0 0 ${cylinder_height}" rpy="0 0 0"/>
        <parent link="cylinder_link"/>
        <child link="platform_link"/>
        <axis xyz="0 1 0"/>
        <limit effort="1000.0" lower="-0.5" upper="0.5" velocity="0.5"/>
    </joint>

    <link name="platform_link">
        <visual>
            <origin xyz="0 0 ${platform_thickness/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder length="${platform_thickness}" radius="${platform_radius}"/>
            </geometry>
            <material name="blue">
                <color rgba="0.2 0.2 1 1"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 ${platform_thickness/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder length="${platform_thickness}" radius="${platform_radius}"/>
            </geometry>
        </collision>
    </link>

    <!-- bottom half of the turtle 'unicycle' -->
    <joint name="stem_joint" type="continuous">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="stem_link"/> 
        <axis xyz="0 0 1"/>
    </joint>

    <link name="stem_link">
        <visual>
            <origin xyz="0 0 -${stem_height/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder length="${stem_height}" radius="${stem_radius}"/>
            </geometry>
            <material name="red">
                <color rgba="1 0.2 0.2 1"/>
            </material>
        </visual>
    </link>

    <joint name="wheel_joint" type="continuous">
        <origin xyz="0 0 -${wheel_radius}" rpy="1.57079632679 0 0"/>
        <parent link="stem_link"/>
        <child link="wheel_link"/>
        <axis xyz="0 0 1"/>
        <limit effort="1000.0" velocity="0.5"/>
    </joint>

    <link name="wheel_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
            </geometry>
            <material name="red">
                <color rgba="1 0.2 0.2 1"/>
            </material>
        </visual>
    </link>

</robot>